@startuml
' use strict UML mode
skinparam style strictuml

actor "User" as user

participant "Application" as main <<main>>
main++

create "ProductDAO" as dao <<DAO>>
main -> dao : construct

create "MainMenu" as menu <<frame>>
main -> menu : construct(dao)

main -> menu++ : setVisible(true)

user -> menu++ : click 'view all products'

create "ProductReport" as report <<dialog>>
menu -> report : construct(dao)

report++

report -> dao++ : getProducts()
return products

create "SimpleListModel" as model <<model>>
report -> model : construct

report -> model++ : updateItems(products)
model--
report -> report : productsList.setModel(model)

menu -> report : setVisible(true)

user -> report : click 'selected product'

report -> report : getSelectedValue() : product
user -> report++: click 'edit'

create "ProductEditor" as editor <<dialog>>
report -> editor++ : create

create "Product : product" as product <<domain>>
report -> product : construct

report -> product++ : getName()
return name
product--

report -> editor : txtName.setText(name)

user -> editor++: changes product name

editor--

user -> editor++ : clicks save button

editor -> editor : getText() : name

editor -> product++ : setName(name)
product--

editor -> dao++ : save(product)
dao–-

editor -> editor– : dispose()

destroy editor

report -> model++ : updateItems(products)
model--

report -> report : productsList.setModel(model)
report -> user : products are visible to user
@enduml